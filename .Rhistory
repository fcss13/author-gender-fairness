geom_text(
aes(label = ..count..),
stat = "count",
vjust = 1.5,
colour = "black"
)
aggregate(genre_books_reviews$rating, list(genre_books_reviews$gender), FUN=mean)
knitr::opts_chunk$set(echo = TRUE)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
suppressPackageStartupMessages({
library(jsonlite)
library(dplyr)
library(WikidataR)
library(recommenderlab)
library(boot)
library(ggplot2)
})
GOOD_RATING = 4
MIN_REVIEWS_OF_BOOK = 50
MIN_REVIEWS_BY_USER = 50
BOOK_GENRE = "history_biography"
NUM_BOOT_REPLICATES = 1000
N_PERMUTATIONS = 10000
books_genre_df <- read.csv(
sprintf("data/goodreads_books_%s.csv", BOOK_GENRE)
)
authors_genre_df <- read.csv(
sprintf("data/goodreads_books_authors_%s.csv", BOOK_GENRE)
)
books_authors_genre <- inner_join(
authors_genre_df,
books_genre_df,
by="author_id"
)
ggplot(books_authors_genre, aes(x=gender)) +
geom_bar(
stat="count",
fill="forestgreen",
alpha=0.5) +
ggtitle( sprintf("Amount of books by %s Author Gender", BOOK_GENRE) ) +
geom_text(
aes(label = ..count..),
stat = "count",
vjust = 1.5,
colour = "black"
)
books_authors_genre %>%
filter(gender == "FEMALE" | gender == "MALE") -> books_authors_genre
ggplot(books_authors_genre, aes(x=gender)) +
geom_bar(
stat="count",
fill="forestgreen",
alpha=0.5) +
ggtitle( sprintf("Amount of %s books by Authors Genders", BOOK_GENRE) ) +
geom_text(
aes(label = ..count..),
stat = "count",
vjust = 1.5,
colour = "black"
)
print(c("Amount of books:", nrow(books_authors_genre)))
reviews_genre_df <- read.csv(
sprintf("data/goodreads_reviews_%s.csv", BOOK_GENRE)
)
# Rating 0 means unrated;  Remove
reviews_genre_df %>%
filter(rating > 0) -> reviews_genre_df
ggplot(reviews_genre_df, aes(x=rating)) +
geom_histogram(fill = "forestgreen")
inner_join(
reviews_genre_df,
books_authors_genre,
by="book_id"
) -> genre_books_reviews
ggplot(genre_books_reviews, aes(x=gender)) +
geom_bar(
stat="count",
fill="forestgreen",
alpha=0.5) +
ggtitle( sprintf("amount of reviews by %s authors gender", BOOK_GENRE) ) +
geom_text(
aes(label = ..count..),
stat = "count",
vjust = 1.5,
colour = "black"
)
print(c("Amount of reviews:", nrow(genre_books_reviews)))
genre_books_reviews <- genre_books_reviews %>%
mutate(like_or_dislike =
case_when(
rating >= GOOD_RATING ~ "LIKE",
TRUE ~ "DISLIKE"
)
)
genre_books_reviews %>%
add_count(user_id, name="n_reviews_by_user") %>%
filter(n_reviews_by_user >= MIN_REVIEWS_BY_USER) %>%
arrange(desc(n_reviews_by_user)) -> genre_books_reviews
print(c("Amount of reviews:", nrow(genre_books_reviews)))
head(
genre_books_reviews %>%
select(user_id, book_id, rating, n_reviews_by_user) %>%
arrange(n_reviews_by_user)
)
ggplot(genre_books_reviews, aes(x=gender)) +
geom_bar(
stat="count",
fill="forestgreen",
alpha=0.5) +
ggtitle( sprintf("amount of reviews by %s authors gender, after filtering n_reviews_by_user > 50", BOOK_GENRE) ) +
geom_text(
aes(label = ..count..),
stat = "count",
vjust = 1.5,
colour = "black"
)
genre_books_reviews %>%
add_count(book_id, name="n_reviews_of_book") %>%
filter(n_reviews_of_book >= MIN_REVIEWS_OF_BOOK) -> genre_books_reviews
print(c("Amount of reviews:", nrow(genre_books_reviews)))
head(
genre_books_reviews %>%
select(user_id, book_id, rating, n_reviews_of_book) %>%
arrange(n_reviews_of_book)
)
ggplot(genre_books_reviews, aes(x=gender)) +
geom_bar(
stat="count",
fill="forestgreen",
alpha=0.5) +
ggtitle( sprintf("Amount of %s reviews by genders, after filtering n_reviews_of_book > 50", BOOK_GENRE) ) +
geom_text(
aes(label = ..count..),
stat = "count",
vjust = 1.5,
colour = "black"
)
aggregate(genre_books_reviews$rating, list(genre_books_reviews$gender), FUN=mean)
ggplot(combined_data_df,
aes(fill=genre, y=mean_recgap, x=algo)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(
aes(ymin=mean_recgap-ic, ymax=mean_recgap+ic),
width=0.4,
alpha=0.9,
size=0.5,
position=position_dodge(.9)) +
ggtitle("Comparison of mean bootstrapped recgaps, by algo and genre. whiskers indicate 95% confidence interval")
recgap = combined_data_df$mean_recgap
reviewgap = combined_data_df$reviewgap
#correlation
cor(reviewgap, recgap)
#scatterplot
ggplot(combined_data_df, aes(x=reviewgap, y=mean_recgap, color=algo)) +
geom_point(size=6)
#regression line
ggplot(combined_data_df,aes(reviewgap, mean_recgap)) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')
#regression line grouped by algo
ggplot(combined_data_df,aes(x=reviewgap,
y=mean_recgap,
color=algo))+
geom_point()+
geom_smooth(method="lm", add_se = F)
recgap = combined_data_df$mean_recgap
reviewgap = combined_data_df$reviewgap
#correlation
cor(reviewgap, recgap)
#scatterplot
ggplot(combined_data_df, aes(x=reviewgap, y=mean_recgap, color=algo)) +
geom_point(size=6)
#regression line
ggplot(combined_data_df,aes(reviewgap, mean_recgap)) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')
#regression line grouped by algo
ggplot(combined_data_df,aes(x=reviewgap,
y=mean_recgap,
color=algo))+
geom_point()+
geom_smooth(method="lm", add_se = FALSE)
recgap = combined_data_df$mean_recgap
reviewgap = combined_data_df$reviewgap
#correlation
cor(reviewgap, recgap)
#scatterplot
ggplot(combined_data_df, aes(x=reviewgap, y=mean_recgap, color=algo)) +
geom_point(size=6)
#regression line
ggplot(combined_data_df,aes(reviewgap, mean_recgap)) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')
#regression line grouped by algo
ggplot(combined_data_df,aes(x=reviewgap,
y=mean_recgap,
color=algo))+
geom_point()+
geom_smooth(method="lm", add_ci = FALSE)
?geom_smooth
recgap = combined_data_df$mean_recgap
reviewgap = combined_data_df$reviewgap
#correlation
cor(reviewgap, recgap)
#scatterplot
ggplot(combined_data_df, aes(x=reviewgap, y=mean_recgap, color=algo)) +
geom_point(size=6)
#regression line
ggplot(combined_data_df,aes(reviewgap, mean_recgap)) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')
#regression line grouped by algo
ggplot(combined_data_df,aes(x=reviewgap,
y=mean_recgap,
color=algo))+
geom_point()+
geom_smooth(method="lm", se = FALSE)
ggplot(combined_data_df,
aes(fill=genre, y=mean_recgap, x=algo)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(
aes(ymin=mean_recgap-ic, ymax=mean_recgap+ic),
width=0.4,
alpha=0.9,
size=0.5,
position=position_dodge(.9)) +
ggtitle("Comparison of mean bootstrapped recgaps, by algo and genre. whiskers indicate 95% confidence interval") +
theme_bw()
ggplot(combined_data_df,
aes(fill=genre, y=mean_recgap, x=algo)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(
aes(ymin=mean_recgap-ic, ymax=mean_recgap+ic),
width=0.4,
alpha=0.9,
size=0.5,
position=position_dodge(.9)) +
ggtitle("Comparison of mean bootstrapped recgaps, by algo and genre. /nwhiskers indicate 95% confidence interval") +
theme_bw()
ggplot(combined_data_df,
aes(fill=genre, y=mean_recgap, x=algo)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(
aes(ymin=mean_recgap-ic, ymax=mean_recgap+ic),
width=0.4,
alpha=0.9,
size=0.5,
position=position_dodge(.9)) +
ggtitle("Comparison of mean bootstrapped recgaps, by algo and genre. \nwhiskers indicate 95% confidence interval") +
theme_bw()
ggplot(combined_data_df,
aes(fill=genre, y=mean_recgap, x=algo)) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(
aes(ymin=mean_recgap-ic, ymax=mean_recgap+ic),
width=0.4,
alpha=0.9,
size=0.5,
position=position_dodge(.9)) +
ggtitle("Comparison of mean bootstrapped recgaps, by algo and genre.\nWhiskers indicate 95% confidence interval") +
theme_bw()
ggplot(combined_data_df,
aes(fill=genre, y=mean_recgap, x=reorder(algo))) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(
aes(ymin=mean_recgap-ic, ymax=mean_recgap+ic),
width=0.4,
alpha=0.9,
size=0.5,
position=position_dodge(.9)) +
ggtitle("Comparison of mean bootstrapped recgaps, by algo and genre.\nWhiskers indicate 95% confidence interval") +
theme_bw()
ggplot(combined_data_df,
aes(fill=genre, y=mean_recgap, x=reorder(algo, -mean_recgap))) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(
aes(ymin=mean_recgap-ic, ymax=mean_recgap+ic),
width=0.4,
alpha=0.9,
size=0.5,
position=position_dodge(.9)) +
ggtitle("Comparison of mean bootstrapped recgaps, by algo and genre. \nWhiskers indicate 95% confidence interval") +
theme_bw()
ggplot(combined_data_df,
aes(fill=genre, y=abs(mean_recgap), x=reorder(algo, -mean_recgap))) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(
aes(ymin=mean_recgap-ic, ymax=mean_recgap+ic),
width=0.4,
alpha=0.9,
size=0.5,
position=position_dodge(.9)) +
ggtitle("Comparison of mean bootstrapped recgaps, by algo and genre. \nWhiskers indicate 95% confidence interval") +
theme_bw()
ggplot(combined_data_df,
aes(fill=genre, y=abs(mean_recgap), x=reorder(algo, -mean_recgap))) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(
aes(ymin=abs(mean_recgap)-ic, ymax=abs(mean_recgap)+ic),
width=0.4,
alpha=0.9,
size=0.5,
position=position_dodge(.9)) +
ggtitle("Comparison of mean bootstrapped recgaps, by algo and genre. \nWhiskers indicate 95% confidence interval") +
theme_bw()
ggplot(combined_data_df,
aes(fill=genre, y=mean_recgap, x=reorder(algo, -mean_recgap))) +
geom_bar(position=position_dodge(), stat="identity") +
geom_errorbar(
aes(ymin=mean_recgap-ic, ymax=mean_recgap+ic),
width=0.4,
alpha=0.9,
size=0.5,
position=position_dodge(.9)) +
ggtitle("Comparison of mean bootstrapped recgaps, by algo and genre. \nWhiskers indicate 95% confidence interval") +
theme_bw()
recgap = combined_data_df$mean_recgap
reviewgap = combined_data_df$reviewgap
#correlation
cor(reviewgap, recgap)
#scatterplot
ggplot(combined_data_df, aes(x=reviewgap, y=mean_recgap, color=algo)) +
geom_point(size=6)
#regression line
ggplot(combined_data_df,aes(reviewgap, mean_recgap)) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')+
theme_bw()
#regression line grouped by algo
ggplot(combined_data_df,aes(x=reviewgap,
y=mean_recgap,
color=algo))+
geom_point()+
geom_smooth(method="lm", se = FALSE)+
theme_bw()
recgap = combined_data_df$mean_recgap
reviewgap = combined_data_df$reviewgap
#correlation
cor(reviewgap, recgap)
#scatterplot
ggplot(combined_data_df, aes(x=reviewgap, y=mean_recgap, color=algo)) +
geom_point(size=6)
#regression line
ggplot(combined_data_df,aes(reviewgap, mean_recgap)) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#regression line grouped by algo
ggplot(combined_data_df,aes(x=reviewgap,
y=mean_recgap,
color=algo))+
geom_point()+
geom_smooth(method="lm", se = FALSE)+
theme_bw()
recgap = combined_data_df$mean_recgap
reviewgap = combined_data_df$reviewgap
#correlation
cor(reviewgap, recgap)
#scatterplot
ggplot(combined_data_df, aes(x=reviewgap, y=mean_recgap, color=algo)) +
geom_point(size=6)
#regression line
ggplot(combined_data_df,aes(reviewgap, mean_recgap)) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#regression line grouped by algo
ggplot(combined_data_df,aes(x=reviewgap,
y=mean_recgap,
color=algo))+
geom_point()+
geom_smooth(method="lm", se = FALSE)+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
corr(combined_data_df$mean_recgap[combined_data_df$algo=="UBCF"], combined_data_df$reviewgap)
corr(combined_data_df$mean_recgap[combined_data_df$algo=="UBCF"], combined_data_df$reviewgap[combined_data_df$algo=="UBCF"])
combined_data_df$mean_recgap[combined_data_df$algo=="UBCF"]
combined_data_df$reviewgap[combined_data_df$algo=="UBCF"]
corr(c( -0.007563743 , 0.002230396 , 0.005343815 , 0.010477563, -0.005482221), c(101818, -25167 , 84028, 425601  , 1172))
combined_data_df$reviewgap
corr(combined_data_df$reviewgap[combined_data_df$genre == "UBCF"], combined_data_df$mean_recgap[combined_data_df$genre == "UBCF"])
cor(combined_data_df$reviewgap[combined_data_df$genre == "UBCF"], combined_data_df$mean_recgap[combined_data_df$genre == "UBCF"])
ubcf_recgap = combined_data_df$mean_recgap[combined_data_df$genre == "UBCF"]
ubcf_reviewgap = combined_data_df$reviewgap[combined_data_df$genre == "UBCF"]
cor(ubcf_recgap,ubcf_reviewgap)
?cor
?corr
ubcf_recgap = combined_data_df$mean_recgap[combined_data_df$genre == "UBCF"]
ubcf_reviewgap = combined_data_df$reviewgap[combined_data_df$genre == "UBCF"]
corr(ubcf_recgap,ubcf_reviewgap)
ubcf_recgap = combined_data_df$mean_recgap[combined_data_df$genre == "UBCF"]
ubcf_reviewgap = combined_data_df$reviewgap[combined_data_df$genre == "UBCF"]
a = c(1,2,3,4,5)
b = c(2,4,6,8,10)
corr(a,b)
ubcf_recgap = combined_data_df$mean_recgap[combined_data_df$genre == "UBCF"]
ubcf_reviewgap = combined_data_df$reviewgap[combined_data_df$genre == "UBCF"]
a = (1,2,3,4,5)
ubcf_recgap
ubcf_recgap
combined_data_df$mean_recgap[combined_data_df$genre == "UBCF"]
ubcf_recgap = combined_data_df$mean_recgap[combined_data_df$algo == "UBCF"]
ubcf_reviewgap = combined_data_df$reviewgap[combined_data_df$algo == "UBCF"]
corr(ubcf_recgap,ubcf_reviewgap)
ubcf_recgap = combined_data_df$mean_recgap[combined_data_df$algo == "UBCF"]
ubcf_reviewgap = combined_data_df$reviewgap[combined_data_df$algo == "UBCF"]
corr(ubcf_recgap,ubcf_reviewgap,  method = "pearson", use = "complete.obs")
ubcf_recgap = combined_data_df$mean_recgap[combined_data_df$algo == "UBCF"]
ubcf_reviewgap = combined_data_df$reviewgap[combined_data_df$algo == "UBCF"]
cor(ubcf_recgap,ubcf_reviewgap, method = "pearson")
ubcf_recgap = combined_data_df$mean_recgap[combined_data_df$algo == "UBCF"]
ubcf_reviewgap = combined_data_df$reviewgap[combined_data_df$algo == "UBCF"]
cor(ubcf_recgap,ubcf_reviewgap, method = "pearson")
ibcf_recgap = combined_data_df$mean_recgap[combined_data_df$algo == "IBCF"]
ibcf_reviewgap = combined_data_df$reviewgap[combined_data_df$algo == "IBCF"]
cor(ibcf_recgap,ibcf_reviewgap, method = "pearson")
pop_recgap = combined_data_df$mean_recgap[combined_data_df$algo == "POP"]
pop_reviewgap = combined_data_df$reviewgap[combined_data_df$algo == "POP"]
cor(pop_recgap,pop_reviewgap, method = "pearson")
?lm
lm(mean_recgap[combined_data_df$algo == "UBCF"] ~ reviewgap[combined_data_df$algo == "UBCF"], data = combined_data_df)
#UBCF
lm(mean_recgap[combined_data_df$algo == "UBCF"] ~ reviewgap[combined_data_df$algo == "UBCF"], data = combined_data_df)
lm(mean_recgap[combined_data_df$algo == "IBCF"] ~ reviewgap[combined_data_df$algo == "IBCF"], data = combined_data_df)
lm(mean_recgap[combined_data_df$algo == "POP"] ~ reviewgap[combined_data_df$algo == "POP"], data = combined_data_df)
recgap = combined_data_df$mean_recgap
reviewgap = combined_data_df$reviewgap
#correlation
cor(reviewgap, recgap)
#scatterplot
ggplot(combined_data_df, aes(x=reviewgap, y=mean_recgap, color=algo)) +
geom_point(size=6)
#regression line
ggplot(combined_data_df,aes(reviewgap, mean_recgap)) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')+ theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#regression line grouped by algo
ggplot(combined_data_df,aes(x=reviewgap,
y=mean_recgap,
color=algo))+
geom_point()+
geom_smooth(method="lm", se = FALSE)+ theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
geom_text(aes(x = 3.5e+05, y = 0.007, label = "b = ", color = "UBCF")) +
recgap = combined_data_df$mean_recgap
reviewgap = combined_data_df$reviewgap
#correlation
cor(reviewgap, recgap)
#scatterplot
ggplot(combined_data_df, aes(x=reviewgap, y=mean_recgap, color=algo)) +
geom_point(size=6)
#regression line
ggplot(combined_data_df,aes(reviewgap, mean_recgap)) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')+ theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#regression line grouped by algo
ggplot(combined_data_df,aes(x=reviewgap,
y=mean_recgap,
color=algo))+
geom_point()+
geom_smooth(method="lm", se = FALSE)+ theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
geom_text(aes(x = 3.5e+05, y = 0.007, label = "b = ", color = "UBCF"))
recgap = combined_data_df$mean_recgap
reviewgap = combined_data_df$reviewgap
#correlation
cor(reviewgap, recgap)
#scatterplot
ggplot(combined_data_df, aes(x=reviewgap, y=mean_recgap, color=algo)) +
geom_point(size=6)
#regression line
ggplot(combined_data_df,aes(reviewgap, mean_recgap)) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')+ theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#regression line grouped by algo
ggplot(combined_data_df,aes(x=reviewgap,
y=mean_recgap,
color=algo))+
geom_point()+
geom_smooth(method="lm", se = FALSE)+ theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
geom_text(aes(x = 3e+05, y = 0.008, label = "b = ", color = "UBCF"))
recgap = combined_data_df$mean_recgap
reviewgap = combined_data_df$reviewgap
#correlation
cor(reviewgap, recgap)
#scatterplot
ggplot(combined_data_df, aes(x=reviewgap, y=mean_recgap, color=algo)) +
geom_point(size=6)
#regression line
ggplot(combined_data_df,aes(reviewgap, mean_recgap)) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')+ theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
#regression line grouped by algo
ggplot(combined_data_df,aes(x=reviewgap,
y=mean_recgap,
color=algo))+
geom_point()+
geom_smooth(method="lm", se = FALSE)+ theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
geom_text(aes(x = 3e+05, y = 0.008, label = "b = 2.679e-08", color = "UBCF"))
